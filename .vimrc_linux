" settings only for gVim
if has('gui_running')
	set nocompatible

	" remove top toolbar
	set guioptions -=T

	" vundle settings
	filetype off

	map <leader>v :edit $HOME/.vimrc<CR>
	set ruler
	set showmatch
	set showmode

	set rtp+=~/.vim/bundle/Vundle.vim

	call vundle#begin()

	Plugin 'VundleVim/Vundle.vim'
	Plugin 'Shutnik/jshint2.vim'
	Plugin 'scrooloose/nerdcommenter'
	Plugin 'bling/vim-airline'
	Plugin 'nathanaelkane/vim-indent-guides'
	Plugin 'tpope/vim-sensible'
	Plugin 'groenewege/vim-less'
	Plugin 'kien/ctrlp.vim'
	Plugin 'mbbill/undotree'
	Plugin 'Raimondi/delimitMate'
	Plugin 'tpope/vim-fugitive'
	Plugin 'elzr/vim-json'
	Plugin 'mhinz/vim-signify'
	Plugin 'ap/vim-css-color'
	Plugin 'othree/yajs.vim'
	Plugin 'KabbAmine/zeavim.vim'
	Plugin 'editorconfig/editorconfig-vim'
	Plugin 'SirVer/ultisnips' " snips engine
	Plugin 'honza/vim-snippets' " common snippets
	" All plugins must be added before the following line
	call vundle#end()
	filetype plugin indent on

	"set current workspace to :Explore
	map <F2> :cd %:p:h

	" Toggle undotree
	nnoremap <F5> :UndotreeToggle<CR>

	if has("persistent_undo")
	set undodir=D:\undo
	set undofile
	endif

	" remove whitespace
	map <F10> :%s/\s\+$//
	" open NERDTree
	map <C-n> :NERDTreeToggle<CR>

	" delimitMate binding
	imap <C-c> <CR><Esc>O

	set lines=50 columns=100
	set number

	set encoding=utf-8
	set fileencodings=utf-8

	set linespace=2

	" Use one of the following to define the camel characters.
	" Stop on capital letters.
	let g:camelchar = "A-Z"
	" Also stop on numbers.
	let g:camelchar = "A-Z0-9"
	" Include '.' for class member, ',' for separator, ';' end-statement,
	" and <[< bracket starts and "'` quotes.
	let g:camelchar = "A-Z0-9.,;:{([`'\""
	nnoremap <silent><C-h> :<C-u>call search('\C\<\<Bar>\%(^\<Bar>[^'.g:camelchar.']\@<=\)['.g:camelchar.']\<Bar>['.g:camelchar.']\ze\%([^'.g:camelchar.']\&\>\@!\)\<Bar>\%^','bW')<CR>
	nnoremap <silent><C-l> :<C-u>call search('\C\<\<Bar>\%(^\<Bar>[^'.g:camelchar.']\@<=\)['.g:camelchar.']\<Bar>['.g:camelchar.']\ze\%([^'.g:camelchar.']\&\>\@!\)\<Bar>\%$','W')<CR>
	inoremap <silent><C-h> <C-o>:call search('\C\<\<Bar>\%(^\<Bar>[^'.g:camelchar.']\@<=\)['.g:camelchar.']\<Bar>['.g:camelchar.']\ze\%([^'.g:camelchar.']\&\>\@!\)\<Bar>\%^','bW')<CR>
	inoremap <silent><C-l> <C-o>:call search('\C\<\<Bar>\%(^\<Bar>[^'.g:camelchar.']\@<=\)['.g:camelchar.']\<Bar>['.g:camelchar.']\ze\%([^'.g:camelchar.']\&\>\@!\)\<Bar>\%$','W')<CR>
	vnoremap <silent><C-h> :<C-U>call search('\C\<\<Bar>\%(^\<Bar>[^'.g:camelchar.']\@<=\)['.g:camelchar.']\<Bar>['.g:camelchar.']\ze\%([^'.g:camelchar.']\&\>\@!\)\<Bar>\%^','bW')<CR>v`>o
	vnoremap <silent><C-l> <Esc>`>:<C-U>call search('\C\<\<Bar>\%(^\<Bar>[^'.g:camelchar.']\@<=\)['.g:camelchar.']\<Bar>['.g:camelchar.']\ze\%([^'.g:camelchar.']\&\>\@!\)\<Bar>\%$','W')<CR>v`<o

	" Color scheme
	colorscheme molokai

	syntax on

	" airline customizations
	let g:airline#extensions#tabline#left_sep = ' '
	let g:airline#extensions#tabline#left_alt_sep = '|'
	let g:airline#extensions#tabline#enabled = 1
	let g:airline#extensions#tabline#buffer_nr_show = 1
	let g:airline_powerline_fonts = 1

	" tab settings
	set tabstop=4
	set shiftwidth=4
	set softtabstop=4
	set noexpandtab

	" caseless searching
	set ignorecase

	set listchars=eol:$,tab:>-,trail:~,extends:>,precedes:<

	" vim-signify
	let g:signify_vcs_list = [ 'git' ]

	match ErrorMsg '\s\+$'
endif
