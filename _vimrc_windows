if has ("gui_running")
    set nocompatible
    source $VIMRUNTIME/vimrc_example.vim

    " for multiple cursor plugin to work in gvim
    set selection=inclusive

    " easily load vimrc to edit (\v)
    map <leader>v :tabedit $MYVIMRC<CR>

    " enable spell check for markdown and txt files
    autocmd BufRead,BufNewFile *.txt,*.md setlocal spell

    " remap Escape to jk
    inoremap jk <ESC>

    " disable swap files
    set noswapfile

    " set backupfile location
    set backupdir=D:/backup//

    " create backup copies so undo persists between sessions
    set backupcopy=yes

    " open file explorer to current directory
    map <C-e> :!start !explorer %:p:h:gs?\/?\\\\\\?<CR>

    " Vundle settings
    set nocompatible
    filetype off

    " set the runtime path to include Vundle and initialize
    set rtp+=C:/Vim/vimfiles/bundle/Vundle.vim/
    let path='C:/Vim/vimfiles/bundle'
    call vundle#begin(path)

    " let Vundle manage Vundle, required
    Plugin 'gmarik/Vundle.vim'

    " Keep plugin commands between vundle#begin/end.
    Plugin 'altercation/vim-colors-solarized'
    Plugin 'Shutnik/jshint2.vim'
    Plugin 'scrooloose/nerdcommenter'
    Plugin 'vim-airline/vim-airline'
    Plugin 'vim-airline/vim-airline-themes'
    Plugin 'nathanaelkane/vim-indent-guides'
    Plugin 'tpope/vim-sensible'
    Plugin 'groenewege/vim-less'
    Plugin 'othree/yajs.vim'
    Plugin 'othree/javascript-libraries-syntax.vim'
    Plugin 'kien/ctrlp.vim'
    Plugin 'FelikZ/ctrlp-py-matcher' " faster CtrlP results
    Plugin 'mbbill/undotree'
    Plugin 'Raimondi/delimitMate'
    Plugin 'tpope/vim-fugitive'
    Plugin 'elzr/vim-json'
    Plugin 'mhinz/vim-signify'
    Plugin 'ap/vim-css-color'
    Plugin 'KabbAmine/zeavim.vim'
    Plugin 'editorconfig/editorconfig-vim'
    Plugin 'tpope/vim-jdaddy' " JSON manipulation/pretty printing
    Plugin 'tpope/vim-markdown'
    Plugin 'tpope/vim-surround' " edit surrounding tags in pairs - cs<from><to>; ds<tag> to delete
    Plugin 'briancollins/vim-jst' " template syntax highlighting
    Plugin 'tpope/vim-vinegar' " enhanced netrw
    Plugin 'edsono/vim-matchit' " % to jump between opening/closing tags
    Plugin 'drmikehenry/vim-fontsize' " adjust font size <leader><leader>+/-
    Plugin 'alvan/vim-closetag' " close html tags
    Plugin 'heavenshell/vim-jsdoc' " plugin to generate JSDoc block comments
    Plugin 'adamclerk/vim-razor' " cshtml razor template syntax highlighting
    Plugin 'vim-multiple-cursors' " sublime-style multiple cursors

    " All plugins must be added before the following line
    call vundle#end()
    filetype plugin indent on

    " tab labels
    set showtabline=2 " always show tabs in gvim, but not vim

    " set current workspace to :Explore
    map <F2> :cd %:p:h

    " Toggle undotree
    nnoremap <F5> :UndotreeToggle<CR>

    if has("persistent_undo")
        set undodir=D:\undo
        set undofile
    endif

    " remove whitespace
    map <F10> :%s/\s\+$//

    " closetag filetypes
    let g:closetag_filenames = "*.html,*.html,*.ejs,*.cshtml,*.xml"

    " delimitMate binding
    imap <C-c> <CR><Esc>O

    " vim-json - disable double-quote concealing
    let g:vim_json_syntax_conceal = 0

    set lines=50 columns=100
    set number

    " Fonts
    set guifont=DejaVu\ Sans\ Mono\ for\ Powerline:h11:cDEFAULT

    set encoding=utf-8
    set fileencodings=utf-8

    set linespace=2

    " Use one of the following to define the camel characters.
    " Stop on capital letters.
    let g:camelchar = "A-Z"
    " Also stop on numbers.
    let g:camelchar = "A-Z0-9"
    " Include '.' for class member, ',' for separator, ';' end-statement,
    " and <[< bracket starts and "'` quotes.
    let g:camelchar = "A-Z0-9.,;:{([`'\""
    nnoremap <silent><C-h> :<C-u>call search('\C\<\<Bar>\%(^\<Bar>[^'.g:camelchar.']\@<=\)['.g:camelchar.']\<Bar>['.g:camelchar.']\ze\%([^'.g:camelchar.']\&\>\@!\)\<Bar>\%^','bW')<CR>
    nnoremap <silent><C-l> :<C-u>call search('\C\<\<Bar>\%(^\<Bar>[^'.g:camelchar.']\@<=\)['.g:camelchar.']\<Bar>['.g:camelchar.']\ze\%([^'.g:camelchar.']\&\>\@!\)\<Bar>\%$','W')<CR>
    inoremap <silent><C-h> <C-o>:call search('\C\<\<Bar>\%(^\<Bar>[^'.g:camelchar.']\@<=\)['.g:camelchar.']\<Bar>['.g:camelchar.']\ze\%([^'.g:camelchar.']\&\>\@!\)\<Bar>\%^','bW')<CR>
    inoremap <silent><C-l> <C-o>:call search('\C\<\<Bar>\%(^\<Bar>[^'.g:camelchar.']\@<=\)['.g:camelchar.']\<Bar>['.g:camelchar.']\ze\%([^'.g:camelchar.']\&\>\@!\)\<Bar>\%$','W')<CR>
    vnoremap <silent><C-h> :<C-U>call search('\C\<\<Bar>\%(^\<Bar>[^'.g:camelchar.']\@<=\)['.g:camelchar.']\<Bar>['.g:camelchar.']\ze\%([^'.g:camelchar.']\&\>\@!\)\<Bar>\%^','bW')<CR>v`>o
    vnoremap <silent><C-l> <Esc>`>:<C-U>call search('\C\<\<Bar>\%(^\<Bar>[^'.g:camelchar.']\@<=\)['.g:camelchar.']\<Bar>['.g:camelchar.']\ze\%([^'.g:camelchar.']\&\>\@!\)\<Bar>\%$','W')<CR>v`<o

    " Color scheme
    colorscheme solarized

    syntax on

    " js library syntax
    let g:used_javascript_libs = "underscore,backbone,jquery"

    " airline customizations
    let g:airline#extensions#tabline#left_sep = ' '
    let g:airline#extensions#tabline#left_alt_sep = '|'
    let g:airline#extensions#tabline#enabled = 1
    let g:airline#extensions#tabline#buffer_nr_show = 1
    let g:airline_powerline_fonts = 1
    let g:airline_theme='solarized'

    " jsDoc.vim configuration
    let g:jsdoc_allow_input_prompt = 1 " allow prompt for interactive input
    let g:jsdoc_input_description = 1 " prompt for function description
    let g:jsdoc_access_descriptions = 2
    let g:jsdoc_underscore_private = 1 " detect underscore starting functions as private
    let g:jsdoc_additional_descriptions = 1 " add @name and @function

    nmap <silent> <C-l> <Plug>(jsdoc)

    " tab settings
    " show existing tab with 4 spaces width
    set tabstop=4
    " when indenting with '>', use 4 spaces width
    set shiftwidth=4
    set softtabstop=4
    " On pressing tab, insert 4 spaces
    set expandtab

    " caseless searching
    set ignorecase

    set listchars=eol:$,tab:>-,trail:~,extends:>,precedes:<

    " vim-signify
    let g:signify_vcs_list = [ 'git' ]

    highlight DiffAdd           cterm=bold ctermbg=none ctermfg=119
    highlight DiffDelete        cterm=bold ctermbg=none ctermfg=167
    highlight DiffChange        cterm=bold ctermbg=none ctermfg=227

    " clear gitgutter background color
    highlight clear SignColumn

    match ErrorMsg '\s\+$'
endif
